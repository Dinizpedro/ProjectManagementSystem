#!/bin/bash
USERS_IN_SERVER=/var/www/dataManagament/userStore
PROJECTS_IN_SERVER=/var/www/dataManagament/projectStore
RESOURCES_IN_SERVER=/var/www/dataManagament/resourceStore
error_response() {
  echo "Status: 400 Bad Request"
  echo "Content-type: text/plain"
  echo ""
  echo "ERROR: ${1}"
  exit
}

### Get content from JSON into global variables
if [ -n "$CONTENT_LENGTH" ]; then
  eval "$(jq -r '@sh "DIRECTOR_EMAIL_JSON=\(.directorEmail) PASS_DIRECTOR_JSON=\(.directorPass) USER_EMAIL_JSON=\(.email) PROJECT_CODE_JSON=\(.projectCode)"')"
else
  error_response "No content found on the request"
fi

if [ "$CONTENT_LENGTH" == "0" ]; then
  error_response "No content found on the request"
fi

### If the wrong method is used
if [ "$REQUEST_METHOD" != "POST" ]; then
  error_response "Invalid method. The only supported method is POST."
fi

### Check if Directoe exists and has the Director profile
DIRECTOR_EMAIL_FOUND=0
if [ -d "$USERS_IN_SERVER/$DIRECTOR_EMAIL_JSON" ]; then
   DIRECTOR_EMAIL_FOUND=1
fi

if [ $DIRECTOR_EMAIL_FOUND -eq 0 ]; then
  error_response "Director email doesn't exist in server"
fi

DIRECTOR_HAS_DIRECTOR_PROFILE=0
if [ -f "$USERS_IN_SERVER/$DIRECTOR_EMAIL_JSON/userProfiles/Director" ] ; then
   DIRECTOR_HAS_DIRECTOR_PROFILE=1
fi

if [ $DIRECTOR_HAS_DIRECTOR_PROFILE == 0 ]; then
  error_response "Director email inserted doesn't have the Director profile associated."
fi

### Hash current password and compare with the one stored in the system
PASS_MATCH=0
CURRENT_HASH=$(cat "$USERS_IN_SERVER"/"$DIRECTOR_EMAIL_JSON"/pass)
CLIENT_HASH=$((0x$(sha1sum <<<"$PASS_DIRECTOR_JSON")0))
if [ "$CURRENT_HASH" = "$CLIENT_HASH" ]; then
  PASS_MATCH=1
fi

if [ $PASS_MATCH -eq 0 ]; then
  error_response "The password you have entered is incorrect."
fi

### Check if Entered Email is a resource in a Project
RESOURCE_FOUND=0
if [ -d "$RESOURCES_IN_SERVER/$PROJECT_CODE_JSON/$USER_EMAIL_JSON" ]; then
   RESOURCE_FOUND=1
fi

if [ $RESOURCE_FOUND -eq 0 ]; then
  error_response "Entered email does not match a Resource in the entered Project."
fi

### Associate Role in the Resource. Number of Roles in file cannot exceed the number of start Dates
NUMBER_OF_DATES=$(cat "$RESOURCES_IN_SERVER/$PROJECT_CODE_JSON/$USER_EMAIL_JSON/startDate" |  wc -l)
NUMBER_OF_ROLES_ASSOCIATED=$(cat "$RESOURCES_IN_SERVER/$PROJECT_CODE_JSON/$USER_EMAIL_JSON/role" | wc -l)

if [  $NUMBER_OF_DATES -gt $NUMBER_OF_ROLES_ASSOCIATED ]; then
   echo "Scrum Master" >> "$RESOURCES_IN_SERVER/$PROJECT_CODE_JSON/$USER_EMAIL_JSON/role"
else
  error_response "Resource already has roles associated to him."
fi

echo "Content-type: text/plain"
echo ""
echo "Resource Associated"
###
