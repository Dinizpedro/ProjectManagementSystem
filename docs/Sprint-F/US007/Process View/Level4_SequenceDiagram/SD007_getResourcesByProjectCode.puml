@startuml
'https://plantuml.com/sequence-diagram
skinparam roundcorner 20
skinparam maxmessagesize 0
skinparam sequenceParticipant underline
skinparam sequenceMessageAlign left
skinparam sequence {
ArrowColor black
ActorBorderColor #black
LifeLineBorderColor black
LifeLineBackgroundColor white
ParticipantBorderColor black
ParticipantBackgroundColor #transparent
ParticipantFontName Aapex
ParticipantFontSize 14
ParticipantFontColor black
ActorBackgroundColor #transparent
ActorFontColor black
ActorFontSize 14
ActorFontName Aapex
}
autonumber

alt iProjectRepository.findByCode(projectCode)).isPresent() == true && iUserRepository.findUserByEmal(dto.userIdDto)).isPresent() == true
  -> "iResourceRepository : IResourceRepository" : getResourcesByProjectCode(dto.projectCodeDto)
activate "iResourceRepository : IResourceRepository"
"iResourceRepository : IResourceRepository" -> "iResourceRepositoryJPA : IResourceRepositoryJPA" : resourceListJPA = getResourceJPAByProjectCode(projectCode)


activate "iResourceRepositoryJPA : IResourceRepositoryJPA"
deactivate "iResourceRepositoryJPA : IResourceRepositoryJPA"
create participant "resourceList : ArrayList<Resource>" as resourceList
"iResourceRepository : IResourceRepository" -> resourceList
loop ResourceJPA resourceJPA : resourceListJPA
	"iResourceRepository : IResourceRepository" -> "iResourceAssemblerJPA : IResourceAssemblerJPA"  : resource = toDomain(resourceJPA)
	activate "iResourceAssemblerJPA : IResourceAssemblerJPA"

ref over "iResourceAssemblerJPA : IResourceAssemblerJPA"
[[SD027_toDomain.puml resourceJPAToDomain]]

end
"iResourceRepository : IResourceRepository" -> resourceList : resourceList = add(resource)
deactivate "iResourceRepositoryJPA : IResourceRepositoryJPA"

end
deactivate "iResourceRepository : IResourceRepository"
	deactivate "iResourceAssemblerJPA : IResourceAssemblerJPA"


@enduml